var myApp=angular.module("myApp",["ngRoute"]);myApp.config(["$routeProvider","$locationProvider",function(e,o){o.hashPrefix(""),e.when("/home",{templateUrl:"/views/templates/home.html",controller:"LoginController"}).when("/register",{templateUrl:"/views/templates/register.html",controller:"LoginController"}).when("/user",{templateUrl:"/views/templates/user.html",controller:"UserController",resolve:{getuser:["UserService",function(e){return e.getuser()}]}}).when("/mainPage",{templateUrl:"/views/templates/mainPage.html",controller:"MainPageController",resolve:{getuser:["UserService",function(e){return e.getuser()}]}}).when("/myBookShelf",{templateUrl:"/views/templates/myBookShelf.html",controller:"MyBookShelfController",resolve:{getuser:["UserService",function(e){return e.getuser()}]}}).when("/otherBookShelves",{templateUrl:"/views/templates/otherBookShelves.html",controller:"OtherBookShelvesController",resolve:{getuser:["UserService",function(e){return e.getuser()}]}}).when("/bookResults",{templateUrl:"/views/templates/bookResults.html",controller:"BookResultsController",resolve:{getuser:["UserService",function(e){return e.getuser()}]}}).otherwise({redirectTo:"home"})}]),myApp.controller("BookResultsController",["$scope","$http","$location","UserService","ApiService",function(e,o,t,r,n){e.logout=r.logout;var l={};e.addBook=function(e){l=e,o.post("/books",l).then(function(e){l="",swal("Added to Bookshelf!")})},e.bookInfoFromApi=n.bookInfoFromApi}]),myApp.controller("HeaderController",["$scope","UserService",function(e,o){e.redirect=o.redirect,e.logout=o.logout,e.eventObject=o.eventObject}]),myApp.controller("LoginController",["$scope","$http","$location","UserService",function(e,o,t,r){e.user={username:"",password:""},e.login=function(){""===e.user.username||""===e.user.password?swal("Oops!","You forgot to enter something in","Please enter your username and password."):o.post("/",e.user).then(function(e){e.data.username?t.path("/user"):swal("Your username or password was incorrect","Please try again.")})},e.registerUser=function(){""===e.user.username||""===e.user.password?swal("Oops!","You forgot to enter something in.","Please create a username and password."):o.post("/register",e.user).then(function(e){t.path("/home")},function(e){swal("Please try again.")})}}]),myApp.controller("MainPageController",["$scope","$http","$location","UserService",function(e,o,t,r){e.logout=r.logout}]),myApp.controller("MyBookShelfController",["$scope","$http","$location","UserService","ApiService","MyBookShelfService",function(e,o,t,r,n,l){e.logout=r.logout,e.bookShelf={},e.newComments={},e.flagThisBook={},l.getBookShelf(),e.findBook=function(){var o=e.bookToSearch.name;n.getBooks(o),o=null},e.editComments=function(){var o=this.book;o.my_comments=e.newComments.input,l.editMyComments(o),e.newComments.input=null},e.addFlag=function(){var o=this.book;o.flagged=e.flagThisBook.input,l.flagMyBook(o),e.flagThisBook.input=null},e.deleteBook=function(e){var o=e;swal({title:"Are you sure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then(function(e){e.value&&l.deleteBook(o)})},e.bookToSearch=n.bookToSearch,e.bookShelf=l.bookShelf}]),myApp.controller("OtherBookShelvesController",["$scope","$http","$location","UserService",function(e,o,t,r){e.logout=r.logout}]),myApp.controller("UserController",["$scope","$http","$location","UserService",function(e,o,t,r){e.userObject=r.userObject,e.logout=r.logout}]),myApp.factory("ApiService",["$http","$location",function(e,o){var t={};return{bookInfoFromApi:t,getBooks:function(r){e.get("/googleBooksApi/"+r).then(function(e){var r=e.data;console.log(t);var n=[];r.items.forEach(function(e,o){n.push(e.volumeInfo)}),t.volumeInfo=n,t.title=e.data.items[0].volumeInfo.title,t.authors=e.data.items[0].volumeInfo.authors,t.publisher=e.data.items[0].volumeInfo.publisher,t.publishedDate=e.data.items[0].volumeInfo.publishedDate,t.description=e.data.items[0].volumeInfo.description,t.industryIdentifiers=e.data.items[0].volumeInfo.industryIdentifiers,t.industryIdentifiers=e.data.items[0].volumeInfo.readingModes,t.categories=e.data.items[0].volumeInfo.categories,t.language=e.data.items[0].volumeInfo.language,t.pageCount=e.data.items[0].volumeInfo.pageCount,o.path("/bookResults")})}}}]),myApp.factory("MyBookShelfService",["$http","$location",function(e,o){var t={},r=function(){e.get("/books").then(function(e){e.data;t.list=e.data})};return{bookShelf:t,getBookShelf:r,editMyComments:function(o){e.put("/books/editMyComments",o)},flagMyBook:function(o){e.put("/books/flagBook",o)},deleteBook:function(o){e.delete("/books/"+o._id).then(function(e){r()})}}}]),myApp.factory("UserService",["$http","$location",function(e,o){var t={};return{userObject:t,redirect:function(e){o.url(e)},getuser:function(){e.get("/user").then(function(e){e.data.username?t.userName=e.data.username:o.path("/home")})},logout:function(){e.get("/user/logout").then(function(e){o.path("/home")})}}}]);